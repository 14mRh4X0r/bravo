# Bravo sample configuration.

[bravo]
# Try to enable Ampoule. This can massively improve server responsiveness, but
# it can cause crashes, misrendering, and other weird bugs. You have been
# warned.
# DO NOT ENABLE ON WIN32. IT CAN CAUSE SERVER LOCKUPS.
#ampoule = yes
ampoule = no

# Try to use the fancy console.
fancy_console = true

[world example]
# This is just an example world. World names come from the name of the
# section; this section describes a world called "example".

# The port to listen on. All of the normal port rules apply; you probably
# cannot use ports below 1024 without root permissions.
# You may specify several ports by seperating them with a comma.
port = 25565

# The host interface to listen on. Optional. If not provided, the server
# will listen on all available interfaces.
# You may specify several hosts by seperating them with a comma.
# host = localhost

# The folder to use for storing the world. Make sure you have write
# permissions to this folder. If it does not exist, it will be created.
# Relative paths are allowed but discouraged.
#url = file://relative/path/to/world
url = file:///absolute/path/to/world

# Which seasons to enable for this world.
# ~ winter: Spread snow over the world, and freeze bodies of water
# ~ spring: Thaw everything
seasons = winter, spring

# Which serializer to use for saving worlds to disk.
# ~ alpha: The Alpha NBT format
# ~ beta: The Beta NBT/MCR format
# Note: There is currently no automatic conversion from alpha to beta!
serializer = beta

# Authenticator. There are only two options:
# ~ offline: anybody can log in, no authentication is done
# ~ online: only people logged into minecraft.net can log in
# Bravo also supports the password authentication scheme; see the docs for
# details.
#authenticator = online
authenticator = offline

# This option enables a permanent cache of geometry, which persists regardless
# of the number of clients connected to this world. It greatly speeds up login
# at the cost of memory usage. This option will also cause the world to
# generate geometry even when no clients are connected, to keep the cache
# full. It is highly recommended to keep this cache enabled. The level of
# caching done is dependent on the number used. 3 is the minimum required to
# let clients login immediately with no glitches; 10 is the level of caching
# done by Notchian servers. Anywhere between 3 and 10 is a good value. This
# option does not increase overall RAM usage, just idle RAM usage!
#
# For the technically minded, the amount of additional RAM consumed by the
# permanent cache is roughly (2s+1)^2 * c, where s is the size of the cache
# according to this setting and c is the amount of RAM consumed by an
# individual chunk, 80KiB or so. Thus, a few common settings and their RAM
# usage:
# ~ 3 -> 3 MiB
# ~ 7 -> 17 MiB
# ~ 8 -> 22 MiB
# ~ 10 -> 34 MiB
# ~ 20 -> 131 MiB
perm_cache = 3

# Plugins.
# Bravo's plugin architecture is quite complex; if you're not sure how to
# manage this section, read the documentation first to get things like the
# names of plugins. While some examples are given, it's very important to read
# the documentation in order to get a good grasp of how to customize your
# server.

# Dig hooks.
dig_hooks = give, bravo_snow, alpha_sand_gravel, torch, water, lava, grass

# Build hooks.
pre_build_hooks = build_snow, tile, fertilizer
post_build_hooks = bravo_snow, alpha_sand_gravel

# Automatons. These make grass grow, birds fly, sun shine, and, well...
# You probably want all of these.
automatons = water, lava, trees, grass

# Terrain generators.
# Some important generators:
# ~ erosion: make dirt appear
# ~ watertable: provide water
# ~ grass: self-explanatory, I hope
# ~ safety: bedrock and other safety essentials
# You'll probably want simplex, complex, or some other terrain provider, as
# well.
#generators = boring, erosion, watertable, grass, safety
generators = simplex, erosion, watertable, beaches, grass, saplings, safety

# The web service. Comment out to disable.
[web]
# Port to listen on.
port = 8080
